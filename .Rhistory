) +
facet_wrap(vars(group), nrow = 1, scales = "fixed") +
geom_point(shape = 21, stroke = 1, size = 3.75) +
theme_custom() +
theme(
axis.line.x = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
axis.line.y = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
)
#| label: fig-nbus_size_and_sector
#| echo: false
#| warning: false
#| fig-cap: "Businesses enumerated by size"
#| cap-location: margin
# Resilience vs. digital adoption
indicators <- c("tech_uses_adoption_score_norm", "resi_capital_score_v3_norm")
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str", "business_size_agg2")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 50, group_name = 25, group_cat_val = 20),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params) %>%
select(city, indicator, group_name, group_cat_val, mean) %>%
pivot_wider(names_from = indicator, values_from = mean) %>%
mutate(
group = paste(group_name, group_cat_val, sep = ": ")
)
ggplot(data = fig_data,
aes(x = tech_uses_adoption_score_norm,
y = resi_capital_score_v3_norm,
fill = city)
) +
facet_wrap(vars(group), nrow = 1, scales = "fixed") +
geom_point(shape = 21, stroke = 1, size = 3.75) +
theme_custom() +
theme(
axis.line.x = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
axis.line.y = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
)
#| label: fig-resilience_overview
#| echo: false
#| warning: false
#| fig-cap: "Access to connectivity and devices"
#| cap-location: margin
fig_notes <- "Notes: The overall resilience score is obtained by taking the sum of the four binary components of resilience capital, a higher score denotes greater potential resilience to shocks."
indicators <- c(names(main_data_all)[str_detect(names(main_data_all), "resi_capital")])
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 25, group_name = 25, group_cat_val = NULL),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params)
fig_data <- resilience_capital(fig_data) %>% mutate(indicator_group2 = fct_inorder(indicator_group2))
labels <- list(
title = "Resilience capital",
subtitle =  NULL,
yax_ti = NULL,
xax_ti = NULL,
caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP)
)
figparams <- list(
geom_type = "tile", # One of "bar" or "tile"
tiles = list(color = "white"),
valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_face = "plain", lab_size = 3.5),
catlabels = list(show = FALSE),
errorbars = list(show = FALSE)
)
scales <- list(
fillcolor = list(palette = "identity", direction = NULL),
yaxis = list(limits = c(0, 1), nbreaks = 5, type = "percent", expand = NULL, droplines = TRUE)
)
legend <- list(
show = FALSE,
title = NULL,
nrows = 1,
ncols = 1,
reverse = FALSE
)
vars <- list(
xvar = "indicator_name", yvar = "group_cat_val", fillvar = "fillcolor"
)
facets <- list(
type = "grid",
rows = "indicator_group2",
cols = "city",
scales = "free",
space = "free",
drop_row_label = FALSE,
drop_col_label = FALSE,
add_dividers = FALSE
)
fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE) + geom_vline(xintercept = c(1.5, 2.5), color = "black")
table(main_data_all$resi_capital_score_v3)
sum(table(main_data_all$resi_capital_score_v3))
sum(table(main_data_all$resi_capital_score_v2))
sum(table(main_data_all$resi_capital_score_v1))
dim(main_data_all)
View(main_data_all %>% select(city, starts_with("resi"))
)
#| include: false
# Importing packaegs, functions declaring globals
source("R/packages.R")
source("R/utils.R")
source("R/globals.R")
source("R/functions.R")
source("R/viz_functions.R")
source("R/0_global_main_data.R")
source("R/specific_functions.R")
# Preparing and combining the enumeration data for all countries
enum_data_all <- bind_rows(
map(COUNTRIES, compile_enumdata, weight_params = WEIGHT_PARAMS)
) %>% mutate(
city = CITIES[country]
)
# Preparing and combining all of the main interview data for all countries
main_data_all <- bind_rows(
map(COUNTRIES, compile_maindata, weight_params = WEIGHT_PARAMS)
) %>% mutate(
city = CITIES[country]
)
table(main_data_all$resi_capital_score_v3)
sum(table(main_data_all$resi_capital_score_v3))
#| label: fig-nbus_size_and_sector
#| echo: false
#| warning: false
#| fig-cap: "Businesses enumerated by size"
#| cap-location: margin
# Resilience vs. digital adoption
indicators <- c("tech_uses_adoption_score_norm", "resi_capital_score_v3_norm")
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 50, group_name = 25, group_cat_val = 20),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params) %>%
select(city, indicator, group_name, group_cat_val, mean) %>%
pivot_wider(names_from = indicator, values_from = mean) %>%
mutate(
group = paste(group_name, group_cat_val, sep = ": ")
)
ggplot(data = fig_data,
aes(x = tech_uses_adoption_score_norm,
y = resi_capital_score_v3_norm,
fill = city)
) +
facet_wrap(vars(group), nrow = 1, scales = "fixed") +
geom_point(shape = 21, stroke = 1, size = 3.75) +
theme_custom() +
theme(
axis.line.x = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
axis.line.y = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
)
#| label: fig-nbus_size_and_sector
#| echo: false
#| warning: false
#| fig-cap: "Businesses enumerated by size"
#| cap-location: margin
# Resilience vs. digital adoption
indicators <- c("tech_uses_adoption_score_norm", "resi_capital_score_v3_norm")
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str", "business_size_agg2")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 50, group_name = 25, group_cat_val = 20),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params) %>%
select(city, indicator, group_name, group_cat_val, mean) %>%
pivot_wider(names_from = indicator, values_from = mean) %>%
mutate(
group = paste(group_name, group_cat_val, sep = ": ")
)
ggplot(data = fig_data,
aes(x = tech_uses_adoption_score_norm,
y = resi_capital_score_v3_norm,
color = city,
shape = group_cat_val)
) +
facet_wrap(vars(group_name), nrow = 1, scales = "fixed") +
geom_point(stroke = 1, size = 3.75) +
theme_custom() +
theme(
axis.line.x = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
axis.line.y = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
)
#| label: fig-nbus_size_and_sector
#| echo: false
#| warning: false
#| fig-cap: "Businesses enumerated by size"
#| cap-location: margin
# Resilience vs. digital adoption
indicators <- c("tech_uses_adoption_score_norm", "resi_capital_score_v3_norm")
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str", "business_size_agg2")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 50, group_name = 25, group_cat_val = 20),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params) %>%
select(city, indicator, group_name, group_cat_val, mean) %>%
pivot_wider(names_from = indicator, values_from = mean) %>%
mutate(
group = paste(group_name, group_cat_val, sep = ": ")
)
ggplot(data = fig_data,
aes(x = tech_uses_adoption_score_norm,
y = resi_capital_score_v3_norm,
color = city,
shape = group_cat_val)
) +
facet_wrap(vars(group_name), nrow = 1, scales = "fixed") +
geom_point(stroke = 1, size = 3.75) +
theme_custom() +
theme(
axis.line.x = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
axis.line.y = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
) +
theme(panel.spacing = unit(2, "lines"))
#| label: fig-nbus_size_and_sector
#| echo: false
#| warning: false
#| fig-cap: "Businesses enumerated by size"
#| cap-location: margin
# Resilience vs. digital adoption
indicators <- c("tech_uses_adoption_score_norm", "resi_capital_score_v3_norm")
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str", "business_size_agg2")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 50, group_name = 25, group_cat_val = 20),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params) %>%
select(city, indicator, group_name, group_cat_val, mean) %>%
pivot_wider(names_from = indicator, values_from = mean) %>%
mutate(
group = paste(group_name, group_cat_val, sep = ": ")
)
ggplot(data = fig_data,
aes(x = tech_uses_adoption_score_norm,
y = resi_capital_score_v3_norm,
color = city,
shape = group_cat_val)
) +
facet_wrap(vars(group_name), nrow = 1, scales = "fixed") +
geom_point(stroke = 1, size = 3.75) +
theme_custom() +
theme(
axis.line.x = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
axis.line.y = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
) +
theme(panel.spacing = unit(4, "lines"))
#| label: fig-nbus_size_and_sector
#| echo: false
#| warning: false
#| fig-cap: "Businesses enumerated by size"
#| cap-location: margin
# Resilience vs. digital adoption
indicators <- c("tech_uses_adoption_score_norm", "perf_revpdypemp_ppp")
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str", "business_size_agg2")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 50, group_name = 25, group_cat_val = 20),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params) %>%
select(city, indicator, group_name, group_cat_val, mean) %>%
pivot_wider(names_from = indicator, values_from = mean) %>%
mutate(
group = paste(group_name, group_cat_val, sep = ": ")
)
ggplot(data = fig_data,
aes(x = tech_uses_adoption_score_norm,
y = perf_revpdypemp_ppp,
color = city,
shape = group_cat_val)
) +
facet_wrap(vars(group_name), nrow = 1, scales = "fixed") +
geom_point(stroke = 1, size = 3.75) +
theme_custom() +
theme(
axis.line.x = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
axis.line.y = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
) +
theme(panel.spacing = unit(4, "lines"))
#| label: fig-resilience_overview
#| echo: false
#| warning: false
#| fig-cap: "Access to connectivity and devices"
#| cap-location: margin
fig_notes <- "Notes: The overall resilience score is obtained by taking the sum of the four binary components of resilience capital, a higher score denotes greater potential resilience to shocks."
indicators <- c(names(main_data_all)[str_detect(names(main_data_all), "resi_capital")])
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 25, group_name = 25, group_cat_val = NULL),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params)
fig_data <- resilience_capital(fig_data) %>% mutate(indicator_group2 = fct_inorder(indicator_group2))
labels <- list(
title = "Resilience capital",
subtitle =  NULL,
yax_ti = NULL,
xax_ti = NULL,
caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP)
)
figparams <- list(
geom_type = "tile", # One of "bar" or "tile"
tiles = list(color = "white"),
valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_face = "plain", lab_size = 3.5),
catlabels = list(show = FALSE),
errorbars = list(show = FALSE)
)
scales <- list(
fillcolor = list(palette = "identity", direction = NULL),
yaxis = list(limits = c(0, 1), nbreaks = 5, type = "percent", expand = NULL, droplines = TRUE)
)
legend <- list(
show = FALSE,
title = NULL,
nrows = 1,
ncols = 1,
reverse = FALSE
)
vars <- list(
xvar = "indicator_name", yvar = "group_cat_val", fillvar = "fillcolor"
)
facets <- list(
type = "grid",
rows = "indicator_group2",
cols = "city",
scales = "free",
space = "free",
drop_row_label = FALSE,
drop_col_label = FALSE,
add_dividers = FALSE
)
fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE) + geom_vline(xintercept = c(1.5, 2.5), color = "black")
#| label: fig-nbus_size_and_sector
#| echo: false
#| warning: false
#| fig-cap: "Businesses enumerated by size"
#| cap-location: margin
# Resilience vs. digital adoption
indicators <- c("tech_uses_adoption_score_norm", "perf_revpdypemp_ppp")
groups_l1 <- "city"
groups_l2 <- GROUPS[c("resp_sex_str", "business_size_agg2")]
ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 80, indicator_group = 50, group_name = 25, group_cat_val = 20),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params) %>%
select(city, indicator, group_name, group_cat_val, mean) %>%
pivot_wider(names_from = indicator, values_from = mean) %>%
mutate(
group = paste(group_name, group_cat_val, sep = ": ")
)
ggplot(data = fig_data,
aes(x = tech_uses_adoption_score_norm,
y = perf_revpdypemp_ppp,
color = city,
shape = group_cat_val)
) +
facet_wrap(vars(group_name), nrow = 1, scales = "fixed") +
geom_point(stroke = 1, size = 3.75) +
scale_y_continuous(trans = "log") +
theme_custom() +
theme(
axis.line.x = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
axis.line.y = element_line(arrow = arrow(type = "open", ends = "both", length = unit(0.1, "inches"))),
) +
theme(panel.spacing = unit(4, "lines"))
#| label: fig-resilience_nonfinancial
#| echo: false
#| warning: false
#| fig-cap: "Non-financial dimensions of business resilience"
#| cap-location: margin
fig_notes <- "Notes: This figure is based on responses to three questions (1) (To owners only) If your household has an emergency that requires  [1/20 of GNI per capita] in cash within the next 7 days, would you need to take resources from the business to cover this emergency, (2) If your main customer were to permanently stop purchasing from your business, or if your main suplier were to close operations, how difficult would this be for your business? and (3) If you needed support to sustain your business operations, how confident are you in relying on your network?"
indicators <- c(names(main_data_all)[str_detect(names(main_data_all), "efunds_hh_owner")],
names(main_data_all)[str_detect(names(main_data_all), "suppchain_cust")],
names(main_data_all)[str_detect(names(main_data_all), "network_conf")])
groups <- GROUPS[("city")]
ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 60, indicator_group = 40, group_name = 25, group_cat_val = NULL),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params)
fct_levels <- c("No", "Yes", "Not difficult at all",  "Somewhat difficult", "Very difficult", "Very confident", "Somewhat confident", "Not confident")
fig_data <- fig_data %>% mutate(indicator_name = fct_rev(factor(indicator_name, levels = fct_levels, ordered = TRUE)))
labels <- list(
title = NULL,
subtitle =  NULL,
yax_ti = NULL,
xax_ti = NULL,
caption = NULL
)
figparams <- list(
geom_type = "bar", # One of "bar" or "tile"
bars = list(width = 0.9, position = "stack", labeltotal = FALSE, color = "white"),
valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_vjust = 0.5, lab_face = "plain", lab_size = 3.5),
catlabels = list(show = FALSE),
errorbars = list(show = FALSE)
)
palette <- c("#DB504A", "#31AFD4", "#A2C3A4", "#FF9F1C", "#DB504A", "#DB504A", "#FF9F1C", "#A2C3A4")
names(palette) <- unique(fig_data$indicator_name)
#| label: fig-resilience_nonfinancial
#| echo: false
#| warning: false
#| fig-cap: "Non-financial dimensions of business resilience"
#| cap-location: margin
fig_notes <- "Notes: This figure is based on responses to three questions (1) (To owners only) If your household has an emergency that requires  [1/20 of GNI per capita] in cash within the next 7 days, would you need to take resources from the business to cover this emergency, (2) If your main customer were to permanently stop purchasing from your business, or if your main suplier were to close operations, how difficult would this be for your business? and (3) If you needed support to sustain your business operations, how confident are you in relying on your network?"
indicators <- c(names(main_data_all)[str_detect(names(main_data_all), "efunds_hh_owner")],
names(main_data_all)[str_detect(names(main_data_all), "suppchain_cust")],
names(main_data_all)[str_detect(names(main_data_all), "network_conf")])
indicators <- indicators[!str_detect(indicators, "score")]
groups <- GROUPS[("city")]
ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data_all, weights = "weight_msme", psu = NULL, keep = "mean")
factor_params <- list(
wrap_sizes = list(indicator_name = 60, indicator_group = 40, group_name = 25, group_cat_val = NULL),
reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE),
order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)
fig_data <- prep_fig_data(ests, factor_params)
fct_levels <- c("No", "Yes", "Not difficult at all",  "Somewhat difficult", "Very difficult", "Very confident", "Somewhat confident", "Not confident")
fig_data <- fig_data %>% mutate(indicator_name = fct_rev(factor(indicator_name, levels = fct_levels, ordered = TRUE)))
labels <- list(
title = NULL,
subtitle =  NULL,
yax_ti = NULL,
xax_ti = NULL,
caption = NULL
)
figparams <- list(
geom_type = "bar", # One of "bar" or "tile"
bars = list(width = 0.9, position = "stack", labeltotal = FALSE, color = "white"),
valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_vjust = 0.5, lab_face = "plain", lab_size = 3.5),
catlabels = list(show = FALSE),
errorbars = list(show = FALSE)
)
palette <- c("#DB504A", "#31AFD4", "#A2C3A4", "#FF9F1C", "#DB504A", "#DB504A", "#FF9F1C", "#A2C3A4")
names(palette) <- unique(fig_data$indicator_name)
scales <- list(
fillcolor = list(palette = palette, direction = NULL),
yaxis = list(limits = c(0, 1), nbreaks = 5, type = "percent", expand = NULL, droplines = FALSE)
)
legend <- list(
show = TRUE,
title = NULL,
direction = "horizontal",
nrows = 3,
ncols = 1,
reverse = TRUE
)
vars <- list(
xvar = "group_cat_val", yvar = "mean", fillvar = "indicator_name"
)
facets <- list(
type = "grid",
rows = "group_name",
cols = "indicator_group",
scales = "free",
space = "free",
drop_row_label = TRUE,
drop_col_label = FALSE,
add_dividers = FALSE
)
p1 <- fig_flex(fig_data %>% filter(indicator %in% names(main_data_all)[str_detect(names(main_data_all), "resi_efunds_hh_owner")]),
vars, facets, figparams, scales, legend, labels, coord_flip = TRUE)
facets <- list(
type = "grid",
rows = "group_name",
cols = "indicator_group",
scales = "free",
space = "free",
drop_row_label = TRUE,
drop_col_label = FALSE,
add_dividers = FALSE
)
p2 <- fig_flex(fig_data %>% filter(indicator %in% names(main_data_all)[str_detect(names(main_data_all), "suppchain_cust")]),
vars, facets, figparams, scales, legend, labels, coord_flip = TRUE)
p3 <- fig_flex(fig_data %>% filter(indicator %in% names(main_data_all)[str_detect(names(main_data_all), "network_conf")]),
vars, facets, figparams, scales, legend, labels, coord_flip = TRUE)
p1 + p2 + p3 + plot_layout(axes = "collect") +
plot_annotation(title = "Other dimensions of business resilience",
subtitle = "MSEs (%)",
caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP),
theme = theme(plot.title = element_text(size = 14, hjust = 0, face = 'bold', color = 'black'),
plot.caption=element_text(hjust=0, color="gray30", size=12),
plot.title.position = "plot",
plot.caption.position = "plot"))
gitcreds::gitcreds_set()

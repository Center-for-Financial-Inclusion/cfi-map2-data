```{r}
#| include: false

# Importing packaegs, functions declaring globals
source("R/packages.R")
source("R/utils.R")
source("R/globals.R")
source("R/functions.R")
source("R/specific_functions.R") # Preparing specialized (non-generic) functions
source("R/viz_functions.R")

# Select country:
#COUNTRY <- params$country
COUNTRY <- "Brazil"
CITY <- CITIES[[COUNTRY]]

# Preparing enumeration data and weights 
source("R/0_weights.R")
# Preparing main interview data  
source("R/0_main_data.R")

source("R/weights_out.R")

enum_data <- enum_data %>%
    left_join(weights_cluster, by = c("Initial_block_ID")) %>%
    mutate(fullsample = "All businesses")

# Add check that number of rows in main dataset = number of rows in raw dataset
```

```{r}
#| include: false

# Quantities to summarize fieldwork

N_initial_blocks_sampled = WEIGHT_PARAMS[[COUNTRY]]["n"]
N_initial_blocks_inenum = sum(businesses_percluster$N_business_total_percluster > 0)
N_blocks_w_expansion = sum(blocks_percluster$N_blocks_percluster > 1)
N_blocks_enumerated = sum(blocks_percluster$N_blocks_percluster) 

summary <- get_fieldwork_summary_businesses(enum_data)
N_bs_total = summary["business_total"]
N_bs_elig = summary["business_eligible"]
N_bs_selected = summary["business_selected"]
N_bs_interviewed = summary["business_interviewed"]
N_clusters_w_interviews = sum(businesses_percluster$N_business_interviwed_percluster > 0)
N_clusters_w_zero_businesses = sum(businesses_percluster$N_business_total_percluster == 0)
  

```

## Fieldwork summary

-   Enumeration was completed in `{r} N_initial_blocks_inenum` out of `{r} N_initial_blocks_sampled` initial sampled blocks.
-   `{r} N_blocks_w_expansion` of the `{r} N_initial_blocks_inenum` initial sampled blocks enumerated resulted in expansion to adjacent blocks
-   `{r} N_blocks_enumerated` blocks (including both initial sampled and expansion blocks) were enumerated.
-   In total, `{r} N_bs_total` business were found during enumeration
-   Of all businesses, `{r} num_and_pct(N_bs_elig, N_bs_total)` were eligible for the study
-   Of eligible businesses, `{r} num_and_pct(N_bs_selected, N_bs_elig)` were selected at random for interview
-   Of selected businesses, `{r} num_and_pct(N_bs_interviewed, N_bs_selected)` were successfully interviewed
-   Successful interviews originate from `{r} N_clusters_w_interviews` initial sampled blocks

## The business landscape

### Number of firms by size and sector

```{r, fig.width = 10, fig.asp = 0.8}
#| label: fig-nbus_size_and_sector
#| echo: false
#| warning: false
#| fig-cap: "Estimated business population by size and sector"
#| cap-location: margin

# Number of firms by size and sector

indicators <- c("business_total")
groups_l1 <- "business_size_agg2"
groups_l2 <- GROUPS[c("business_sector_agg3")]
  
ests <- compute_summary_clusterlevel_2g(indicators, groups_l1, groups_l2, enum_data, keep = "total")
fig_data <- total_businesses(ests)
title <- total_businesses_title(ests, fig_data)

title <- "Businesses by size and industrial sector"

labels <- list(
  title = str_wrap(title, 60),
  subtitle =  "Businesses (N)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.6, position = "stack", labeltotal = TRUE, labeltotal_ndgy = TRUE,labeltotal_extendmax = TRUE, color = "white"), 
  valuelabels = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0.5, lab_face = "plain", lab_size = 4.75),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE)
)

palette <- c("#41BBD9", "#CEE5F2", "#FF9F1C")
names(palette) <- c("Services: retail/wholesale trade (re-sale)", "Services: transportation, construction, repair, other", "Manufacturing")

scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 1), nbreaks = 5, type = "number", expand = c(0,0), droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = "Industrial sector", 
  nrows = 3, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "business_size_agg2", yvar = "total", fillvar = "group_cat_val"
)

fig_flex(fig_data, vars, facets = NULL, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.6) + theme(axis.text.y = element_text(face = "bold"), axis.text.x = element_blank(), axis.ticks.x = element_blank())


```

### MSE characteristics

```{r, fig.width = 8, fig.asp = 0.8}
#| label: fig-mse_chars
#| echo: false
#| warning: false
#| fig-cap: "MSE sample characteristics"
#| cap-location: margin

indicators <- c("business_total")
groups <- GROUPS[c("business_size_agg2", "business_premise", "business_registration_status", "resp_sex_str")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "total")
fig_data <- sample_chars(ests, groups) %>% 
  mutate(
    group_name = str_wrap(group_name, 30)
  )

labels <- list(
  title = "Characteristics of MSEs",
  subtitle =  "MSEs (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.9, position = "stack", color = "white", labeltotal = FALSE), 
  valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_vjust = 0.5, lab_face = "plain", lab_size = 5),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE)
)

palette <- c("#C4F1BE","#A2C3A4", "#FF9F1C", "#41BBD9", "#CEE5F2", "#CEE5F2", "#FF7B9C", "#CEE5F2", "#FF7B9C")
names(palette) <- unique(fig_data$group_cat_val)

scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 1), nbreaks = 5, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = FALSE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "group_name", yvar = "share", fillvar = "group_cat_val"
)

fig_flex(fig_data, vars, facets = NULL, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.6) + theme(axis.text.y = element_text(face = "bold"))


```

### Productivity

```{r, fig.width = 8, fig.asp = 0.8}
#| label: fig-mses_productivity
#| echo: false
#| warning: false
#| fig-cap: "MSE revenues and productivity"
#| cap-location: margin

# Firm performance: Monthly revenue and normalized sales per employee
fig_notes <- "Notes: MSEs reported monthly revenue in local currency, these values are converted to USD using June 1 2024 exchange rates obtained from UN treasury data. Daily sales per employee is computed by standardizing revenues across firms using data on the months per year and the hours per week the business is in operation."


gdp_peremp <- wb_data(indicator = "SL.GDP.PCAP.EM.KD", country = "Brazil", return_wide = FALSE) %>% 
  select(country, year = date, gdp_pe_ppp = value) %>% 
  group_by(country) %>% 
  mutate(
    max_year = max(year), 
    gdp_pe_ppp_pd = gdp_pe_ppp/12/30.5, 
    gdp_pe_lcu_pd = gdp_pe_ppp_pd*PPP_RATES[["Brazil"]], 
    gdp_pe_usd_pd = gdp_pe_lcu_pd/FX_RATES[["Brazil"]]
  ) %>% 
  filter(year == max_year) %>% 
  mutate(
    group_cat_val = "All businesses", 
    indicator_name = str_wrap("Daily sales per employee [USD]", 25), 
    mean = gdp_pe_usd_pd, 
    currency = "International $"
    )

indicators <- c("perf_rev_reports", "perf_rev_usd", "perf_revpdypemp_usd")
groups <- GROUPS[c("fullsample","resp_sex_str", "business_sector_agg4")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = NULL)

factor_params <- list(
  wrap_sizes = list(indicator_name = 25, indicator_group = 20, group_name = 25, group_cat_val = NULL), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params, include_valuelabel = FALSE) %>% 
  mutate(
    mean = ifelse(indicator == "perf_rev_reports", mean*100, median), 
    mean_low = ifelse(indicator == "perf_rev_reports", mean_low*100, median_low), 
    mean_upp = ifelse(indicator == "perf_rev_reports", mean_upp*100, median_upp), 
    indicator_name = fct_inorder(indicator_name), 
    valuelabel = ifelse(indicator %in% c("perf_rev_reports", "perf_rev_usd"), prettyNum(round(mean, 0), big.mark = ","), round(mean, 2))
    ) %>% filter(indicator != "perf_rev_reports") %>% 
  mutate(
    group_cat_val = fct_rev(group_cat_val)
  )

labels <- list(
  title = "MSE revenues and productivity",
  subtitle = "Median monthly sales and standardized daily sales per worker",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.8, position = "dodge", position_width = 0.9, labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 1, lab_ndgfcty = 1000, lab_ndgdiry = 1, lab_ndgx = 0.5, lab_face = "plain", lab_size = 3.5), 
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("grey90",  "#FF9F1C", "#41BBD9")
names(palette) <- c("All businesses", "Gender of business owner\nor manager", "Sector") 

scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 1), nbreaks = 5, type = "number", expand = c(0.1, 0.1), droplines = TRUE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 4, 
  ncols = 1, 
  reverse = FALSE
)

vars <- list(
  xvar = "group_cat_val", yvar = "mean", fillvar = "group_name"
)

facets <- list(
  type = "wrap", 
  rows = "group_name", 
  wrap_nrows = 1, 
  wrap_ncols = 21,
  cols = "indicator_name", 
  scales = "free_x", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = FALSE, 
  add_dividers = TRUE
)

fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +
  geom_point(data = gdp_peremp, aes(x = group_cat_val, y = mean, color = "Reference: GDP per\nperson employed, USD (WDI)"), shape = 21, size = 2, stroke = 1.5, fill = "white") + 
  guides(color = guide_legend(title = NULL)) + 
  scale_color_manual(values = "red")

```

------------------------------------------------------------------------

------------------------------------------------------------------------

```{r, fig.width = 8, fig.asp = 0.6}
#| label: fig-mses_chars_bygender
#| echo: false
#| warning: false
#| fig-cap: "Gender composition of MSEs by sise and sector"
#| cap-location: margin

indicators <- c("resp_sex_men", "resp_sex_women")
groups <- GROUPS[c("fullsample", "business_premise", "business_size_agg2", "business_sector_agg4", "business_registration_status")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 40, indicator_group = 20, group_name = 15, group_cat_val = 50), 
  reverse_order = list(indicator_name = FALSE, indicator_group = FALSE, group_name = FALSE, group_cat_val = TRUE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params) %>% filter(group_cat_val %in% c("All businesses", "Household premises", "1 person", "Food production and distribution", "Non-food retail trade"))

labels <- list(
  title = "Share of men and women MSE owners or managers",
  subtitle =  "MSEs (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.9, position = "stack", position_width = 0.9, labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0.5, lab_face = "plain", lab_size = 3.5),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("#FF7B9C", "#CEE5F2")
names(palette) <- c("Women", "Men")   

scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 1), nbreaks = 5, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "group_cat_val", yvar = "mean", fillvar = "indicator_name"
)

facets <- list(
  type = "grid", 
  rows = "group_name", 
  cols = "indicator_group", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = TRUE, 
  add_dividers = FALSE
)

fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3)


```

```{r, fig.width = 8, fig.asp = 0.8}
#| label: fig-mses_chars_age_exp
#| echo: false
#| warning: false
#| fig-cap: "Gender composition of MSEs by sise and sector"
#| cap-location: margin

indicators <- c("resp_education_agg2_shc_secormore", "resp_experience", "resp_age")

groups <- GROUPS[c("fullsample", "resp_sex_str", "business_sector_agg4")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = NULL)

factor_params <- list(
  wrap_sizes = list(indicator_name = 80, indicator_group = 20, group_name = 20, group_cat_val = NULL), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params, valuelabel_type = "number") %>% 
  mutate(valuelabel = ifelse(indicator == "resp_education_agg2_shc_secormore", round(mean*100,1), valuelabel)) %>% 
  mutate(group_cat_val = fct_rev(group_cat_val)) %>%
  mutate(indicator_name_long = ifelse(indicator == "resp_education_agg2_shc_secormore", paste(indicator_name_long, " (%)"), indicator_name_long)) %>%
 mutate(indicator_name_long = str_wrap(indicator_name_long, 15), 
        indicator_name_long = fct_inorder(indicator_name_long))

labels <- list(
  title = "Education, age and experience of MSE owners or managers",
  subtitle =  NULL, 
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.7, color = "white", position = "dodge", position_width = 0.9, labeltotal = FALSE), 
  valuelabels = list(show = TRUE, lab_hjust = 1, lab_face = "plain", lab_size = 3.5),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("grey90",  "#FF9F1C", "#41BBD9")
names(palette) <- c("All businesses", "Gender of business\nowner or manager", "Sector") 


scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 60), nbreaks = 4, type = "number", expand = c(0,0.2), droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = FALSE
)

vars <- list(
  xvar = "group_cat_val", yvar = "mean", fillvar = "group_name"
)

facets <- list(
  type = "wrap", 
  rows = "group_name", 
  wrap_nrows = 1, 
  wrap_ncols = 21,
  cols = "indicator_name_long", 
  scales = "free_x", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = FALSE, 
  add_dividers = FALSE
)

fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())

```

### Pyschographics

```{r, fig.width = 12, fig.asp = 0.475}
#| label: fig-mse_owner_psych
#| echo: false
#| warning: false
#| fig-cap: "Pyschographic characrteristics of SME owners or managers, by gender"
#| cap-location: margin

fig_notes <- c("Notes: Only owners were asked about the motivation for starting the business and the primary goal for the business over the next year. MSEs are classified into one of 3 'psychographic orientations' based on owner responses about motivations, goals and attitude to risk. 'Growth' oriented firms are those with owners who see themsevles as entreprenuers, want to grow the business over the next 12 months and who have a medium to high tolerance for risk. 'Survial' oriented firms are those whose owners started the business due to lack of opportunities or other reasons, whose main goal is to cover costs or leave the business and who have a medium to low tolerance for risk. 'Stability' firms are those who neither meet the criteria for 'Growth' or 'Survival'.")

indicators <- c("resp_motivation_entrep", "resp_motivation_lackopp", "resp_motivation_oth", 
                "resp_maingoal_grow",  "resp_maingoal_stab", "resp_maingoal_leave", 
                "resp_riskapproach_aggr", "resp_riskapproach_calc", "resp_riskapproach_avoid", "resp_psych_segment_shc_grow", "resp_psych_segment_shc_stab", "resp_psych_segment_shc_surv")

groups <- GROUPS[c("fullsample", "resp_sex_str")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 50, indicator_group = 20, group_name = 25, group_cat_val = NULL), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params)

labels <- list(
   title = "Pyschographic characteristics of MSE owners or managers",
  subtitle = "MSE owners or managers (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.8, position = "dodge", position_width = 0.9, labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 0, lab_face = "plain", lab_size = 3.5),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("grey90", "#FF7B9C", "#CEE5F2")
names(palette) <- c("All businesses", "Women", "Men")  

scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 1), nbreaks = 5, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = FALSE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = FALSE
)

vars <- list(
  xvar = "indicator_name", yvar = "mean", fillvar = "group_cat_val"
)

facets <- list(
  type = "grid", 
  rows = "indicator_group", 
  cols = "group_cat_val", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = FALSE, 
  add_dividers = TRUE
)

fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())


```

### Digital technologies

```{r, fig.width = 12, fig.asp = 0.65}
#| label: fig-digtech_overview
#| echo: false
#| warning: false
#| fig-cap: "Access to connectivity and devices"
#| cap-location: margin

fig_notes <- "Notes: The digital technology adoption score is a score that counts how many digital technologies are in use by the firm, the score ranges from 0 (no digiital technologies used) to 10 (all ten digital technologies labeled in the figure used)."

indicators <- c("tech_has_device", "tech_has_internet", "tech_uses_website", names(main_data)[str_detect(names(main_data), "^(tech.+).(shc.+)$")], "tech_uses_ai", "tech_uses_digpayments", "tech_uses_digloans", "tech_uses_adoption_score")
groups <- GROUPS[c("fullsample", "business_size_agg2", "resp_sex_str", "resp_education_agg2_alt")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean") %>% filter(indicator_name %in% c("Daily or weekly", "Has", "Uses", "Used in past 12 mos", "Mean [0 min -10 max]"))

factor_params <- list(
  wrap_sizes = list(indicator_name = 80, indicator_group = 50, group_name = 25, group_cat_val = 20), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params)
fig_data <- tech_adoption_landscape(fig_data, wrap = factor_params[["wrap_sizes"]][["indicator_name"]])

labels <- list(
  title = "Digital technologies: Adoption and frequency of use",
  subtitle =  "MSEs (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption =  str_wrap(paste(SOURCE, fig_notes), CAP_WRAP)
)

figparams <- list(
  geom_type = "tile", # One of "bar" or "tile"
  tiles = list(color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_face = "plain", lab_size = 3.5),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE)
)

scales <- list(
  fillcolor = list(palette = "identity", direction = NULL), 
  yaxis = list(limits = c(0, 1), nbreaks = 5, type = "percent", expand = NULL, droplines = TRUE)
)

legend <- list(
  show = FALSE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = FALSE
)

vars <- list(
  xvar = "indicator_name", yvar = "group_cat_val", fillvar = "fillcolor"
)

facets <- list(
  type = "grid", 
  rows = "indicator_group", 
  cols = "group_name", 
  scales = "free", 
  space = "free",
  drop_row_label = FALSE, 
  drop_col_label = FALSE, 
  add_dividers = FALSE
)

fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3) 

```

### Predictors of overall technology adoption

```{r, fig.width = 12, fig.asp = 0.65}
#| label: fig-reg_digtech_drivers
#| echo: false
#| warning: false
#| fig-cap: "Predictors of digital technology adoption"
#| cap-location: margin

fig_notes <- "Notes: The results shown are based on a linear regression model that measures the relationship of several owner and firm-level characteristics with digital technology adoption measured using a score that ranges from 0 to 10 depending on the firm's use of ten distinct technologies. The regression parameters are used to compute predicted probabilities to show the marginal effect of each characteristic on digital technology adoption. Age and experience are mean centered and the effect shown corresponds to an increase in 5 years. The height of 'Baseline' corresponds to the predicted digital technology adoption score for firms run by an owner with mean age, mean experience, with primary-level or less educaitonal attainment."
  
# Defining regressions
  depvars <- c("tech_uses_adoption_score")
  depvar_labels <- INDICATORS[depvars]
  maineffects <- c("resp_sex_women", "resp_age_c_5yi", "resp_experience_c_5yi", "resp_education_agg2_shc_secormore", "resp_motivation_entrep", "resp_maingoal_grow", "resp_riskapproach_aggr", "business_sector_agg3_shc_srv_oth", "business_sector_agg3_shc_mfc")
  effect_labels <- c("(Intercept)" = "Baseline", INDICATORS[maineffects])

# Running regressions
ests <- bind_rows(
    map(depvars, model_and_prepfig, maineffects, confounds = NULL, data = main_data, depvar_labels, effect_labels, selected_country = COUNTRY),
  )


# Preparing figure data
factor_params <- list(
  wrap_sizes = list(depvar_label = 20, effect_label = 70, model_type = 25), 
  reverse_order = list(depvar_label = TRUE, effect_label = TRUE, model_type = FALSE), 
  order_vars = list(depvar_label = NULL, effect_label = NULL, model_type = NULL)
)

fig_data <- prep_reg_data(prep_reg_factors(ests, factor_params, include_valuelabel = FALSE))

 labels <- list(
      title = "Predictors of overall technology adoption",
      subtitle = NULL,
      y = "Predicted technology adoption score [0-10]",
      x = NULL,
      caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP)
    )
 
 barparams <- list(
  bars = list(width = 0.6, color = "grey90"), 
  valuelabels = list(show = FALSE, lab_vjust = 0, lab_hjust = 0, lab_ndgy = 0, lab_ndgx = 0.25, lab_face = "plain", lab_size = 4), 
  arrowlabels = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0.5, lab_ndgy = 0, lab_ndgx = -0.25,  lab_face = "plain", lab_size = 4), 
    baselinelabel = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0, lab_ndgy = 0, lab_ndgx = 0,  lab_face = "bold", lab_size = 4.25)
) 

 miny <- round(min(fig_data$fig_data), 2) 
maxy <- round(max(fig_data$fig_data), 2) 
buffer <- (maxy - miny)/100
miny <- miny - buffer*2
if (miny > 0) { miny <- 0 }
maxy <- maxy + buffer*2

scales <- list(
  y = list(limits = c(miny,maxy), position = "right", nbreaks = 5), 
  x = list(txtwrap = 50, position = "bottom")
)

fig_regests(fig_data, labels, facets = NULL, barparams, scales, effect_desc = "The effect of each predictor on technology adoption", coord_flip = TRUE)

```


### Digital technology strands

```{r, fig.width = 12, fig.asp = 0.7}
#| label: fig-digital_strands
#| echo: false
#| warning: false
#| fig-cap: "Summary measures of financial access"
#| cap-location: margin

fig_notes <- c("Notes: The analysis in this figure considers a total of 10 distinct digital technologies across 5 categories: infrastructure, communicating with customers, accessing markets, business operations and finance. Specifically these are: (1) Internet, (2) A computer device (including mobile phone/tablet), (3) A website (4) Messaging apps (5) Social media (6) E-commerce platforms (7) Software for operations (8) Artificial intelligence (9) Digital payments acceptance and (10) Digital loans.")

indicators <- c("tech_function_infra_N", "tech_function_comms_N", "tech_function_mkts_N", "tech_function_ops_N", "tech_function_epayloans_N")
groups <- GROUPS[c("fullsample", "resp_sex_str", "resp_education_agg2_alt")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 50, indicator_group = 20, group_name = 25, group_cat_val = 30), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params, valuelabel_type = "number", valuelabel_thresh = 0.3) %>% 
  group_by(group_cat_val) %>% 
  mutate(
      total = sum(mean), 
      barlabel = ifelse(indicator_name == "Connectivity and devices (N, Max = 2)", numclean(total, 1), NA),
      barlabelpos = ifelse(indicator_name == "Connectivity and devices (N, Max = 2)", total, NA), 
    ) 
  
labels <- list(
  title = "Total number of digital technologies used by category",
  subtitle =  "Mean number of devices (Minimum = 0, Maximum = 10)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP*0.9)
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.8, position = "stack", labeltotal = TRUE, labeltotal_ndgy = TRUE, labeltotal_extendmax = TRUE, color = "white"), 
  valuelabels = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0.5, lab_face = "plain", lab_size = 3.75),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("#CEE5F2", "#41BBD9","#A2C3A4", "#FF9F1C", "#FF7B9C")
names(palette) <- c("Connectivity and devices (N, Max = 2)", "Communicating with customers (N, Max = 2)", "Accessing markets (N, Max = 2)", "Business operations (N, Max = 2)", "Customer payments and loans (N, Max = 2)")     


scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 30), nbreaks = 5, type = "number", expand = c(0,0), droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 3, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "group_cat_val", yvar = "mean", fillvar = "indicator_name"
)

facets <- list(
  type = "grid", 
  rows = "group_name", 
  cols = "indicator_group", 
  wrap_nrows = 1, 
  scales = "free_y", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = TRUE, 
  add_dividers = FALSE
)

fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())


```

### Financial services

```{r, fig.width = 12, fig.asp = 0.8}
#| label: fig-account_strands
#| echo: false
#| warning: false
#| fig-cap: "Summary measures of financial access"
#| cap-location: margin

fig_notes <- c("Notes: The analysis in this figure considers a total of 23 distinct formal financial devices across 4 categories: savings, loans, payments and insurance. Specifically these are: I. MSE primarily keeps savings using an account kept with any of the following: (1) Commercial bank, (2) Microfinance institution, (3) Fintech, (4) Savings and Credit Cooperative or (5) Mobile money wallet; II. MSE has had an active loan in the past 12 months from any of the following: (6) Commercial bank, (7) Microfinance institution, (8) Fintech, (9) Credit cooperative, (10) Mobile money provider, (11) Digital platform or (12) has a Credit card; III. In the past 12 months has used any of the following non-cash customer payments solution: (13) POS for card payments, (14) Direct bank transfres, (15) Online payments through a website, (16) Mobile money, (17) Instant money transfers, (18) QR payments; and IV. currently has any of the following insurance policies: (19) Life insurance, (20) Health insurance, (21) Accident insurance, (22) Business insurance, (23) Automobile insurance.")

indicators <- c("fin_access_savings_N", "fin_access_loans_N", "fin_access_payments_N", "fin_insur_shc_cu_N")
groups <- GROUPS[c("fullsample", "resp_sex_str", "resp_education_agg2_alt")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 50, indicator_group = 20, group_name = 25, group_cat_val = 25), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params, valuelabel_type = "number", valuelabel_thresh = 0.3) %>% 
  group_by(group_cat_val) %>% 
  mutate(
      total = sum(mean), 
      barlabel = ifelse(indicator_name == "Savings accounts (N)", numclean(total, 1), NA),
      barlabelpos = ifelse(indicator_name == "Savings accounts (N)", total, NA), 
    ) 
  
labels <- list(
  title = "Total number of formal financial services used by category",
  subtitle =  "Mean number of devices (Minimum = 0, Maximum = 23)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP*0.9)
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.8, position = "stack", labeltotal = TRUE, labeltotal_ndgy = TRUE, labeltotal_extendmax = TRUE, color = "white"), 
  valuelabels = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0.5, lab_face = "plain", lab_size = 4.25),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("#CEE5F2", "#41BBD9","#A2C3A4", "#FF9F1C")
names(palette) <- c("Savings accounts (N)", "Loan accounts (N)", "Payments solutions (N)", "Insurance policies (N)")     


scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 30), nbreaks = 5, type = "number", expand = c(0,0), droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "group_cat_val", yvar = "mean", fillvar = "indicator_name"
)

facets <- list(
  type = "grid", 
  rows = "group_name", 
  cols = "indicator_group", 
  wrap_nrows = 1, 
  scales = "free_y", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = TRUE, 
  add_dividers = FALSE
)

fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.4) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())


```

### Predictors of overall financial inclusion

```{r, fig.width = 12, fig.asp = 0.65}
#| label: fig-reg_finserv_drivers
#| echo: false
#| warning: false
#| fig-cap: "Predictors of digital technology adoption"
#| cap-location: margin

fig_notes <- "Notes: The results shown are based on a linear regression model that measures the relationship of several owner and firm-level characteristics with the number of financial devices used in each category (savings, loans and insurance). Age and experience are mean centered and the effect shown corresponds to an increase in 5 years. The height of 'Baseline' corresponds to the predicted number of financial devices used for firms run by an owner with mean age, mean experience, with primary-level or less educaitonal attainment."
  
# Defining regressions
  depvars <- c("fin_access_savings_N", "fin_access_loans_N", "fin_access_insurance_N")
  depvar_labels <- INDICATORS[depvars]
  maineffects <- c("resp_sex_women", "resp_age_c_5yi", "resp_experience_c_5yi", "resp_education_agg2_shc_secormore", "resp_motivation_entrep", "resp_maingoal_grow", "resp_riskapproach_aggr", "business_sector_agg3_shc_srv_oth", "business_sector_agg3_shc_mfc")
  effect_labels <- c("(Intercept)" = "Baseline", INDICATORS[maineffects])

# Running regressions
ests <- bind_rows(
    map(depvars, model_and_prepfig, maineffects, confounds = NULL, data = main_data, depvar_labels, effect_labels, selected_country = COUNTRY),
  )


# Preparing figure data
factor_params <- list(
  wrap_sizes = list(depvar_label = 20, effect_label = 70, model_type = 25), 
  reverse_order = list(depvar_label = TRUE, effect_label = TRUE, model_type = FALSE), 
  order_vars = list(depvar_label = NULL, effect_label = NULL, model_type = NULL)
)

fig_data <- prep_reg_data(prep_reg_factors(ests, factor_params, include_valuelabel = FALSE))

 labels <- list(
      title = "Predictors of financial services adoption",
      subtitle = NULL,
      y = "Predicted number of financial devices used",
      x = NULL,
      caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP*0.9)
    )
 
 barparams <- list(
  bars = list(width = 0.6, color = "grey90"), 
  valuelabels = list(show = FALSE, lab_vjust = 0, lab_hjust = 0, lab_ndgy = 0, lab_ndgx = 0.25, lab_face = "plain", lab_size = 4), 
  arrowlabels = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0.5, lab_ndgy = 0, lab_ndgx = -0.25,  lab_face = "plain", lab_size = 4), 
    baselinelabel = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0, lab_ndgy = 0, lab_ndgx = 0,  lab_face = "bold", lab_size = 4.25)
) 

 miny <- round(min(fig_data$fig_data), 2) 
maxy <- round(max(fig_data$fig_data), 2) 
buffer <- (maxy - miny)/100
miny <- miny - buffer*2
if (miny > 0) { miny <- 0 }
maxy <- maxy + buffer*2

scales <- list(
  y = list(limits = c(miny,maxy), position = "left", nbreaks = 4), 
  x = list(txtwrap = 50, position = "bottom")
)

 facets <- list(type = "grid", rows ="model_type", cols = "depvar_label", scales = "free", space = "free", drop_row_label = TRUE) 
    
 
fig_regests(fig_data, labels, facets = facets, barparams, scales, effect_desc = "The effect of each predictor on financial services adoption", coord_flip = TRUE)

```

### Insurance adoption segments

```{r, fig.width = 8, fig.asp = 0.8}
#| label: fig-ins_segments_1_v2
#| echo: false
#| warning: false
#| fig-cap: "Insurance adoption segments (v2)"
#| cap-location: margin

fig_notes <- c("Notes: The insurance adoption group is based on whether survey respondents report that they currently have one of several types of insurance, including: Life, Health, Accident, Home, Funeral, Business, Automobile, Weather-indexed and others.")

indicators <- names(main_data)[str_detect(names(main_data), "fin_ins_seg01_")]
indicators <- indicators[!str_detect(indicators, "_str")]
groups <- GROUPS[c("fullsample", "resp_sex_str", "resp_education_agg4")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 70, indicator_group = 20, group_name = 15, group_cat_val = 25), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params, valuelabel_thres = 0.05) %>% filter(!is.na(indicator_group)) %>% mutate(group_cat_val = factor(group_cat_val, levels = str_wrap(c("All businesses", "Men", "Women", "Some primary or none", "Primary", "Secondary", "University/technical school"), 25), ordered = TRUE))

labels <- list(
  title = "Insurance adoption segments",
  subtitle =  "MSEs (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.75, position = "stack", labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_vjust = 0.5, lab_face = "plain", lab_size = 3.25),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("#A2C3A4", "#C4F1BE", "#41BBD9", "#FF9F1C", "grey90")
names(palette) <- c("Health insurance only", "Life insurance only", "Both health and life", "Other insurance (not health or life)",  "No insurance coverage")

scales <- list(
  fillcolor = list(palette = palette, direction = NULL), 
  yaxis = list(limits = c(0, 1.001), nbreaks = 4, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "group_cat_val", yvar = "mean", fillvar = "indicator_name"
)

facets <- list(
  type = "grid", 
  rows = "group_name", 
  cols = "indicator_group", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = TRUE, 
  add_dividers = FALSE
)

fig_flex(fig_data, vars, facets = facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3)

```




### Total number of insurance products being used

```{r, fig.width = 8, fig.asp = 0.8}
#| label: fig-ins_numproducts
#| echo: false
#| warning: false
#| fig-cap: "Insurance adoption segments (v2)"
#| cap-location: margin

fig_notes <- c("Notes: The insurance adoption group is based on whether survey respondents report that they currently have one of several types of insurance, including: Life, Health, Accident, Home, Funeral, Business, Automobile, Weather-indexed and others.")

indicators <- "fin_insur_shc_cu_N"
groups <- GROUPS[c("fullsample")]
ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data %>% filter(fin_insur_any_shc_cu == 1), weights = "weight_msme_adj", psu = NULL, keep = "mean") %>% filter(group_cat_val != "Does not have insurance")


indicators <- "fin_insur_shc_cu_N"
groups_l1 <- "fin_ins_lif_seg1_str"
groups_l2 <- GROUPS[c("fullsample", "resp_sex_str", "resp_education_agg2_alt")]


ests <- compute_summary_mainlevel_2g(indicators, groups_l1, groups_l2, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean") %>% filter(group_cat_val != "Does not have insurance")

factor_params <- list(
  wrap_sizes = list(indicator_name = 70, indicator_group = 20, group_name = 15, group_cat_val = 25), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params, valuelabel_type = "number") %>% filter(!is.na(indicator_group)) 

labels <- list(
  title = "Number of insurance products in use concurrently",
  subtitle =  "MSEs (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.8, position = "dodge", labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = FALSE, lab_hjust = 0.5, lab_vjust = 0.5, lab_face = "plain", lab_size = 3.25),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("#A2C3A4", "#FF9F1C")
names(palette) <- c("Current life policyholder", "Current insurance policyholder but not life")

scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 5), nbreaks = 2, type = "number", expand = c(0,0), droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 3, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "group_cat_val", yvar = "mean", fillvar = "fin_ins_lif_seg1_str"
)

facets <- list(
  type = "grid", 
  rows = "group_name", 
  cols = "indicator_group", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = TRUE, 
  add_dividers = FALSE
)

fig_flex(fig_data, vars, facets = facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3)

```

### Predictors of life insurance adoption

```{r, fig.width = 12, fig.asp = 0.6}
#| label: fig-lifeins_predictors_combined
#| echo: false
#| warning: false
#| fig-cap: "Predictors of insurance adoption: Sao Paulo"
#| cap-location: margin

fig_notes <- "Notes: The results shown are based on a linear regression model that measures the relationship of several owner and firm-level characteristics with the MSE owner's adoption of lilfe insurance. The regression parameters are used to compute predicted probabilities to show the marginal effect of each characteristic on the probability of life insurance adoption. Age and experience are mean centered and the effect shown corresponds to an increase in 5 years. The height of 'Baseline' corresponds to the predicted probability of membership in the segment for firms run by an owner with mean age, mean experience, with primary-level or less educaitonal attainment and in the 'other services' sector."

# Defining regressions
  depvars <- c("fin_insur_lif_shc_cu")
  depvar_labels <- INDICATORS[depvars]
  maineffects <- c("resp_sex_women", "resp_age_c_5yi", "resp_experience_c_5yi", "resp_education_agg2_shc_secormore", "resp_motivation_entrep", "resp_maingoal_grow", "resp_riskapproach_aggr", "business_sector_agg4_shc_fd", "business_sector_agg4_shc_nfdm", "business_sector_agg4_shc_nfdrt", "fin_insur_hlt_shc_cu", "fin_insur_bus_shc_cu", "fin_insur_aut_shc_cu")
  effect_labels <- c("(Intercept)" = "Baseline", INDICATORS[maineffects])

# Running regressions
ests <- bind_rows(
    map(depvars, model_and_prepfig, maineffects, confounds = NULL, data = main_data, depvar_labels, effect_labels, selected_country = COUNTRY),
  )

# Preparing figure data
factor_params <- list(
  wrap_sizes = list(depvar_label = 50, effect_label = 65, model_type = 25), 
  reverse_order = list(depvar_label = TRUE, effect_label = TRUE, model_type = FALSE), 
  order_vars = list(depvar_label = NULL, effect_label = NULL, model_type = NULL)
)

fig_data <- prep_reg_data(prep_reg_factors(ests, factor_params, include_valuelabel = FALSE)) 

#%>% 
#  mutate(drop = ifelse(sig == "", 1, 0), 
#         drop = ifelse(term == "(Intercept)", 0, drop)) %>% 
#  filter(drop == 0)

 labels <- list(
      title = NULL,
      subtitle = "",
      y = "Predicted probability [%]",
      x = NULL,
      caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP*0.9)
    )
 
 barparams <- list(
  bars = list(width = 0.6, color = "grey90"), 
  valuelabels = list(show = FALSE, lab_vjust = 0, lab_hjust = 0, lab_ndgy = 0, lab_ndgx = 0.25, lab_face = "plain", lab_size = 3), 
  arrowlabels = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0.5, lab_ndgy = 0, lab_ndgx = -0.3,  lab_face = "plain", lab_size = 3), 
  baselinelabel = list(show = TRUE, lab_vjust = 0.5, lab_hjust = 0, lab_ndgy = 0, lab_ndgx = 0,  lab_face = "bold", lab_size = 3.75)
) 

scales <- list(
  y = list(position = "left", nbreaks = 2), 
  x = list(txtwrap = 50, position = "bottom")
)

facets <- list(type = "grid", cols ="depvar_label", rows = "city", scales = "free", space = "fixed", drop_row_label = TRUE)
    
fig_regests(fig_data, labels, facets = facets, barparams, scales, effect_desc = "The effect of each predictor on the probability of purchasing health insurance", coord_flip = TRUE) 


```

### General perceptions of insurance

```{r, fig.width = 8, fig.asp = 0.8}
#| label: fig-ins_perceptions
#| echo: false
#| warning: false
#| fig-cap: "Likelihood of purchasing health insurance in next 12 months"
#| cap-location: margin

fig_notes <- c("Notes: All respondents (both users and non-users of insurance) were asked to rate their agreeement with each statement")

indicators <- names(main_data)[str_detect(names(main_data), "fin_insur_statm")]
indicators <- indicators[!str_detect(indicators, "_num")]
groups <- GROUPS[c("fullsample")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 90, indicator_group = 30, group_name = 25, group_cat_val = 35), 
  reverse_order = list(indicator_name = TRUE, indicator_group = TRUE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

labels <- list(
  title = "General perceptions of insurance",
  subtitle =  "MSE owners or managers (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.6, position = "stack", labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_vjust = 0.5, lab_face = "plain", lab_size = 3.5),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("#A2C3A4", "#C4F1BE", "#EFFFC8", "#FF9F1C", "#DB504A", "grey90")
names(palette) <- c("Strongly agree", "Agree", "Neutral", "Disagree", "Strongly disagree", "Don't know/refused")

scales <- list(
  fillcolor = list(palette = palette, direction = NULL), 
  yaxis = list(limits = c(0, 1), nbreaks = 4, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "indicator_group", yvar = "mean", fillvar = "indicator_name"
)

facets <- list(
  type = "grid", 
  rows = "indicator_group", 
  cols = "group_cat_val", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = TRUE, 
  drop_col_label = FALSE, 
  add_dividers = FALSE
)

fig_data <- prep_fig_data(ests, factor_params, valuelabel_thresh = 0.05) %>% filter(!is.na(indicator_group)) %>%
  mutate(indicator_name = fct_rev(factor(indicator_name, levels = c("Strongly agree", "Agree", "Neutral", "Disagree", "Strongly disagree", "Don't know/refused"), ordered = TRUE)), 
         indicator_group = fct_rev(indicator_group)
         ) %>% filter(indicator_group %in% str_wrap(c("I am likely to purchase insurance coverage in the near future", "Life insurance is a critical component of long-term financial planning"), 30))

fig_flex(fig_data, vars, facets = facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3)

```

### Life insurance market segments

```{r, fig.width = 8, fig.asp = 0.8}
#| label: fig-ins_segments_2
#| echo: false
#| warning: false
#| fig-cap: "Likelihood of purchasing health insurance in next 12 months"
#| cap-location: margin

fig_notes <- c("Notes: The insurance market segment labeled 'Current' is based on whether survey respondent reports that they currently have at least on of several types of insurance, including: Life, Health, Accident, Home, Funeral, Business, Automobile, Weather-indexed and others. The 'Prospective' segment is composed of respondents who do not currently have insurance but who say they agree or strongly agree to any of the three following statements: (1) 'I am likely to purchase insurance coverage in the near future', (2) 'Health insurance is necessary for ensuring access to healthcare services', (3) 'Life insurance is a critical component of long-term financial planning'")

indicators <- names(main_data)[str_detect(names(main_data), "fin_ins_lif_seg3")]
indicators <- indicators[!str_detect(indicators, "_str")]
groups <- GROUPS[c("fullsample", "resp_sex_str", "resp_education_agg4")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 70, indicator_group = 20, group_name = 15, group_cat_val = 25), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = FALSE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

fig_data <- prep_fig_data(ests, factor_params, valuelabel_thres = 0.05) %>% filter(!is.na(indicator_group)) %>% mutate(group_cat_val = factor(group_cat_val, levels = str_wrap(c("All businesses", "Men", "Women", "Some primary or none", "Primary", "Secondary", "University/technical school"), 25), ordered = TRUE))

labels <- list(
  title = "Life insurance market segments",
  subtitle =  "MSEs owners or managers (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.65, position = "stack", labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 0.5, lab_vjust = 0.5, lab_face = "plain", lab_size = 3.5),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("#A2C3A4", "#FF9F1C", "grey90", "red")
names(palette) <- c("Current life policyholder", "Prospective life policyholder", "Never used, hard to reach", "Stopped using, does not recommend")

scales <- list(
  fillcolor = list(palette = palette, direction = NULL), 
  yaxis = list(limits = c(0, 1.002), nbreaks = 4, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 3, 
  ncols = 1, 
  reverse = TRUE
)

vars <- list(
  xvar = "group_cat_val", yvar = "mean", fillvar = "indicator_name"
)

facets <- list(
  type = "grid", 
  rows = "group_name", 
  cols = "indicator_group", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = TRUE, 
  add_dividers = FALSE
)

fig_flex(fig_data, vars, facets = facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3)

```


### Purchase channels



```{r, fig.width = 8, fig.asp = 0.8}
#| label: fig-insur_channels_brazil
#| echo: false
#| warning: false
#| fig-cap: "Insurance purchase channels: Brazil"
#| cap-location: margin

fig_notes <- c("Notes: The estimates in this figure are based on the following two questions: (1) Please select the channels(s) through which you purchased your insurance policy? [Asked to all respondents who said they currently have or had any type of insurance in the past 12 months, including respondents who reporting using insurance payouts to cope with climate or health shocks], (2) Did you purchase your insurance policy online? [Asked to repsondents saying they used an online channel to purchase insurance per (1) above.")

indicators <- names(main_data)[str_detect(names(main_data), "fin_insur_chnnl_")]
groups <- GROUPS[c("fin_ins_lif_seg1_str")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 70, indicator_group = 20, group_name = 25, group_cat_val = 80), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = TRUE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

labels <- list(
  title = "Insurance purchase channels",
  subtitle =  "MSEs owners or managers (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.8, position = "dodge", position_width = 0.9, labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 0, lab_face = "plain", lab_size = 4),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)


palette <- c("#A2C3A4", "#FF9F1C")
names(palette) <- c("Current life policyholder", "Current insurance policyholder but not life")

scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 0.75), nbreaks = 1, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 2, 
  ncols = 1, 
  reverse = FALSE
)

vars <- list(
  xvar = "indicator_name", yvar = "mean", fillvar = "group_cat_val"
)

facets <- list(
  type = "grid", 
  rows = "indicator_group", 
  cols = "group_cat_val", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = TRUE, 
  drop_col_label = FALSE, 
  add_dividers = TRUE
)

fig_data <- prep_fig_data(ests, factor_params) %>% filter(group_cat_val != "Does not have insurance")

fig_flex(fig_data, vars, facets = NULL, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3) 


```



### Perceptions of insurance value and benefits

```{r, fig.width = 12, fig.asp = 0.6}
#| label: fig-insur_valueprop_brazil
#| echo: false
#| warning: false
#| fig-cap: "Insurance value proposition: Brazil"
#| cap-location: margin

fig_notes <- c("Notes: The estimates in this figure are based on the following questions: (1) In general, do you feel your overall insurance coverage meets all your needs? [Reference population: All respondent that currently have or had insurance in the past 12 mnonths], (2) What factors do you consider most important when selecting insurance coverage? [Reference population: All respondent that currently have insurance], (3) What is the most important area would you prioritize if you could expand your current insurance coverage? [Reference population: All respondent that currently have insurance], (4) What benefits have you experienced from having insurance?")

indicators <- names(main_data)[str_detect(names(main_data), "fin_insur_needs_|fin_insur_factors_top_|fin_insur_rec_lif_")]
groups <- GROUPS[c("fin_ins_lif_seg1_str")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data %>% filter(fin_ins_lif_seg1_str != "Does not have insurance"), weights = "weight_msme_adj", psu = NULL, keep = "mean") %>% 
  mutate(indicator_group = ifelse(indicator_group == "Insurance coverage meeting needs", "Do you feel your overall insurance coverage meets all your needs?", indicator_group),
         indicator_group = ifelse(indicator_group == "Insurance coverage selecton, top factors", "What factors do you consider most important when selecting insurance coverage?", indicator_group),
         indicator_group = ifelse(indicator_group == "Life insurance", "Would you recommend life insurance to others?", indicator_group)) %>% 
  mutate(mean = ifelse(group_cat_val != "Current life policyholder" & indicator_group == "Would you recommend life insurance to others?", NA, mean))

factor_params <- list(
  wrap_sizes = list(indicator_name = 70, indicator_group = 20, group_name = 25, group_cat_val = 80), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = TRUE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

labels <- list(
  title = "Perceptions of insurance value",
  subtitle =  "MSE owners or managers (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = NULL
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.8, position = "dodge", position_width = 0.9, labeltotal = FALSE, color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 0, lab_face = "plain", lab_size = 4),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

palette <- c("#A2C3A4", "#FF9F1C")
names(palette) <- c("Current life policyholder", "Current insurance policyholder but not life")

scales <- list(
  fillcolor = list(palette = palette), 
  yaxis = list(limits = c(0, 1), nbreaks = 1, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = TRUE, 
  title = NULL, 
  nrows = 2, 
  ncols = 1, 
  reverse = FALSE
)

vars <- list(
  xvar = "indicator_name", yvar = "mean", fillvar = "group_cat_val"
)

facets <- list(
  type = "grid", 
  rows = "indicator_group", 
  cols = "group_name", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = FALSE, 
  drop_col_label = TRUE, 
  add_dividers = TRUE
)

fig_data <- prep_fig_data(ests, factor_params) %>% filter(indicator_name != "Don't know/refused")
fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3)

```



## Reasons insurance not currently used

```{r, fig.width = 12, fig.asp = 0.45}
#| label: fig-insur_notused_brazil
#| echo: false
#| warning: false
#| fig-cap: "Reasons insurance not used"
#| cap-location: margin

fig_notes <- c("Notes: The estimates in this figure are based on the following question: (1) If you currently do not have insurance or have discontinued your insurance, what is the primary reason for this decision?")

indicators <- names(main_data)[str_detect(names(main_data), "fin_insur_nonewhy_")]
groups <- GROUPS[c("fullsample", "resp_sex_str", "resp_education_agg2_alt")]

ests <- compute_summary_mainlevel_1g(indicators, groups, data = main_data, weights = "weight_msme_adj", psu = NULL, keep = "mean")

factor_params <- list(
  wrap_sizes = list(indicator_name = 70, indicator_group = 20, group_name = 20, group_cat_val = 12), 
  reverse_order = list(indicator_name = TRUE, indicator_group = FALSE, group_name = FALSE, group_cat_val = TRUE), 
  order_vars = list(indicator_name = NULL, indicator_group = NULL, group_name = NULL, group_cat_val = NULL)
)

labels <- list(
  title = "Reasons insurance not used or discontinued",
  subtitle =  "MSE owners or managers (%)",
  yax_ti = NULL,
  xax_ti = NULL,
  caption = str_wrap(paste(SOURCE, fig_notes), CAP_WRAP)
)

figparams <- list(
  geom_type = "bar", # One of "bar" or "tile"
  bars = list(width = 0.8, position = "dodge", position_width = 0.9, labeltotal = FALSE, fill = "#CEE5F2", color = "white"), 
  valuelabels = list(show = TRUE, lab_hjust = 0, lab_face = "plain", lab_size = 4),
  catlabels = list(show = FALSE), 
  errorbars = list(show = FALSE, color = "#2374AB")
)

scales <- list(
  fillcolor = NULL, 
  yaxis = list(limits = c(0, 0.5), nbreaks = 5, type = "percent", expand = NULL, droplines = FALSE)
)

legend <- list(
  show = FALSE, 
  title = NULL, 
  nrows = 1, 
  ncols = 1, 
  reverse = FALSE
)

vars <- list(
  xvar = "indicator_name", yvar = "mean", fillvar = "group_cat_val"
)

facets <- list(
  type = "grid", 
  rows = "indicator_group", 
  cols = "group_cat_val", 
  scales = "free_y", 
  space = "free", 
  drop_row_label = TRUE, 
  drop_col_label = FALSE, 
  add_dividers = FALSE
)


fig_data <- prep_fig_data(ests, factor_params)

fig_flex(fig_data, vars, facets, figparams, scales, legend, labels, coord_flip = TRUE, scale_factor = 1.3) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())


```

